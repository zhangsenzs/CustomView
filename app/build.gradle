apply plugin: 'com.android.application'

def cfg = rootProject.ext.configuration // 配置
android {
    compileSdkVersion cfg.compileVersion
    buildToolsVersion cfg.buildToolsVersion
    defaultConfig {
        applicationId cfg.applicationId
        minSdkVersion cfg.minSdk
        targetSdkVersion cfg.targetSdk
        versionCode cfg.versionCode
        versionName cfg.versionName
    }

    signingConfigs {
        release {
            storeFile cfg.storeFile
            keyAlias cfg.keyAlias
            keyPassword cfg.keyPassword
            storePassword cfg.storePassword
        }
    }

    // 多渠道打包
    productFlavors {
        thit {}
    }

    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [CHANNEL_VALUE: name]
    }

    buildTypes {
        release {
            zipAlignEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    if (output.outputFile != null && output.outputFile.name.endsWith('.apk')
                            && 'release'.equals(variant.buildType.name)) {
                        def apkFile = new File(output.outputFile.getParent(),
                                "Christian_v${variant.versionName}(${variant.versionCode})_${variant.flavorName}.apk")
                        output.outputFile = apkFile
                    }
                }
            }
        }

        debug {
            minifyEnabled false
            zipAlignEnabled false
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:24.2.1'
    testCompile 'junit:junit:4.12'
}
